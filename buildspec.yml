
---
version: 0.2
env:
  variables:
    AWS_DEFAULT_REGION: 'us-east-1'
    DOCKER_IMAGE: 'caven-instance'
    variables:
    NET_SDK_URL: https://download.visualstudio.microsoft.com/download/pr/c505a449-9ecf-4352-8629-56216f521616/bd6807340faae05b61de340c8bf161e8/dotnet-sdk-6.0.201-linux-x64.tar.gz
    NET_SDK_SHA: a4d96b6ca2abb7d71cc2c64282f9bd07cedc52c03d8d6668346ae0cd33a9a670d7185ab0037c8f0ecd6c212141038ed9ea9b19a188d1df2aae10b2683ce818ce

phases:
  install:
    commands:
    - (curl -SL $NET_SDK_URL --output dotnet.tar.gz && echo "$NET_SDK_SHA dotnet.tar.gz" | sha512sum -c - && rm -rf /usr/share/dotnet && mkdir -p /usr/share/dotnet && tar -zxf dotnet.tar.gz -C /usr/share/dotnet && rm dotnet.tar.gz)
  pre_build:
    commands:
    - mkdir -p build
    - 'echo "Build arn: $CODEBUILD_BUILD_ARN\n Commit: $CODEBUILD_SOURCE_VERSION" > build.txt'
    - buildId=$(echo $CODEBUILD_BUILD_ID | cut -d ':' -f 2)
    - chmod -R +x scripts
    - dotnet restore --verbosity minimal CavenInstance.sln 
  build:
    commands:
    - dotnet new tool-manifest --force
    - dotnet publish --no-restore -c Release -o app src/CavenInstance/CavenInstance.csproj
    - docker build --build-arg "APP_PATH=app" -t caven-instance -f src/CavenInstance/Dockerfile .
  post_build:
    commands:
    - accountId=$(aws sts get-caller-identity --output text | awk '{print $1}')
    - dockerImage="$accountId.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/caven-instance"
    - './scripts/push-docker -i "$dockerImage" -s "caven-instance:latest" -t "latest,$buildId"'
    - 'echo "$dockerImage:$buildId" > build/image.txt'
    - cp -r app build/
    - |
      printf '[{"name":"caven-instance", "imageUri":"%s"}]' $dockerImage:$buildId > build/imagedefinitions.json

artifacts:
  files:
    - '**.*'
